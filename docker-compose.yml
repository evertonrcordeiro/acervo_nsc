version: '3.9'

services:
  backend:
    container_name: backend
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    command: bash -c "python manage.py runserver 0.0.0.0:8000"

  celery:
    container_name: celery_worker
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    command: celery -A backend worker --loglevel=info

    depends_on:
      - backend
      - redis
    env_file:
      - .env

  watchfolder:
    container_name: watchfolder
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    command: python watchfolder.py
    depends_on:
      - backend
      - redis
    env_file:
      - .env

  redis:
    container_name: redis
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    command: ["npm", "run", "dev", "--", "--host"]
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

volumes:
  postgres_data:
